@page "/"

<MudGrid Spacing="1" Justify="Justify.FlexStart">

    @foreach (var module in modules)
    {
        <MudItem xs="4" Class="pa-8">
            <MudCard Elevation="3" @onclick='() => GoToPage(module[0])' Style="cursor:pointer">

                <MudCardMedia Image=@module[1] Height="200" />

                <MudCardContent>
                    <MudText Typo="Typo.h5">@module[2]</MudText>
                </MudCardContent>

            </MudCard>
        </MudItem>
    }

</MudGrid>

@code{

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Inject]
    public IEmployeeService EmployeeService { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    //Every module in the app, { route, image path and display text }
    private List<List<string>> modules = new List<List<string>> {
        new List<string> { "timemanagement", "/Images/timeManagement.jpg", "Time Management" },
        new List<string> { "employees", "/Images/employees.jpg", "Employees" },
        new List<string> { "departments", "/Images/departments.jpg", "Departments" },
        new List<string> { "jobs", "/Images/jobs.jpg", "Jobs" },
        new List<string> { "employeetypes", "/Images/employeeType.jpg", "Employee Types" },
        new List<string> { "loggedtimetypes", "/Images/loggedTimeType.png", "Logged Time Types" }
    };


    private async Task GoToPage(string route)
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            if (route.Equals("timemanagement"))
            {
                var employee = await EmployeeService.GetEmployeeByEmail(user.Identity.Name);
                if (user.Identity.IsAuthenticated && employee != null)
                {
                    NavigationManager.NavigateTo($"/timemanagement/{employee.Id}");
                }

            }
            else
            {
                NavigationManager.NavigateTo($"/{route}");
            }
        }

    }


}




