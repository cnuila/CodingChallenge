@page "/timemanagement/{id}"

<MudGrid Justify="Justify.Center">
    <MudItem xs="12" Class="pa-8">

        <MudGrid Justify="Justify.Center">

            <!--   First Section   --->
            <MudItem xs="12">
                <MudPaper Elevation="4" Class="grey lighten-4 py-7 px-10 red-text text-darken-2">
                    <MudText Typo="Typo.h4"> <b>Carlos Antonio Nuila</b> </MudText>
                    <MudText Typo="Typo.subtitle1"> Intern Junior Software Engineer </MudText>
                    <MudText Typo="Typo.subtitle1" Class="grey-text text-darken-2"> IT </MudText>
                    <MudText Typo="Typo.subtitle1" Class="grey-text text-darken-2"> Contract </MudText>
                </MudPaper>
            </MudItem>

            <!--   Second Section   --->
            <MudItem xs="12">

                <MudGrid>

                    <MudItem xs="3" Class="d-flex align-center">
                        <MudPaper Elevation="4" Class="grey lighten-4 pa-7">

                            <MudDateRangePicker Label="Dates" DisableToolbar="true" Rounded="true" MaxDate="@(DateTime.Today)" @bind-DateRange="dateRange" />

                        </MudPaper>
                    </MudItem>

                    <MudItem xs="2" Class="d-flex align-center">
                        <MudPaper Elevation="4" Class="grey lighten-4 py-3 px-7 red-text text-darken-2">

                            <MudText Typo="Typo.body2"> <b>REGULAR HOURS </b> </MudText>

                            <MudGrid Class="pt-3 mr-5">

                                <MudItem xs="4">
                                    <MudIcon Icon="@Icons.Material.Filled.AccessTime" Title="Access Time" Size="Size.Large" />
                                </MudItem>
                                <MudItem xs="4">
                                    <MudText Typo="Typo.h6" Class="grey-text text-darken-3"> <b>200</b> </MudText>
                                    <MudText Typo="Typo.caption" Class="grey-text text-darken-2 "> Hours </MudText>
                                </MudItem>
                                <MudItem xs="4">
                                    <MudText Typo="Typo.h6" Class="grey-text text-darken-3"> <b>30</b> </MudText>
                                    <MudText Typo="Typo.caption" Class="grey-text text-darken-2 "> Mins </MudText>
                                </MudItem>

                            </MudGrid>

                        </MudPaper>
                    </MudItem>

                    <MudItem xs="2" Class="d-flex align-center">
                        <MudPaper Elevation="4" Class="grey lighten-4 py-3 px-7 orange-text text-darken-2">

                            <MudText Typo="Typo.body2"> <b>VACATION HOURS </b> </MudText>

                            <MudGrid Class="pt-3 mr-5" Spacing="5">

                                <MudItem xs="4">
                                    <MudIcon Icon="@Icons.Material.Filled.Deck" Title="Deck" Size="Size.Large" />
                                </MudItem>
                                <MudItem xs="4">
                                    <MudText Typo="Typo.h6" Class="grey-text text-darken-3"> <b>1000</b> </MudText>
                                    <MudText Typo="Typo.caption" Class="grey-text text-darken-2 "> Hours </MudText>
                                </MudItem>
                                <MudItem xs="4">
                                    <MudText Typo="Typo.h6" Class="grey-text text-darken-3"> <b>30</b> </MudText>
                                    <MudText Typo="Typo.caption" Class="grey-text text-darken-2 "> Mins </MudText>
                                </MudItem>

                            </MudGrid>

                        </MudPaper>
                    </MudItem>

                    <MudItem xs="2" Class="d-flex align-center">
                        <MudPaper Elevation="4" Class="grey lighten-4 py-3 px-7 green-text text-accent-3">

                            <MudText Typo="Typo.body2"> <b>SICK HOURS </b> </MudText>

                            <MudGrid Class="pt-3 mr-5" Spacing="5">

                                <MudItem xs="4">
                                    <MudIcon Icon="@Icons.Material.Filled.Bed" Title="Bed" Size="Size.Large" />
                                </MudItem>
                                <MudItem xs="4">
                                    <MudText Typo="Typo.h6" Class="grey-text text-darken-3"> <b>200</b> </MudText>
                                    <MudText Typo="Typo.caption" Class="grey-text text-darken-2 "> Hours </MudText>
                                </MudItem>
                                <MudItem xs="4">
                                    <MudText Typo="Typo.h6" Class="grey-text text-darken-3"> <b>30</b> </MudText>
                                    <MudText Typo="Typo.caption" Class="grey-text text-darken-2 "> Mins </MudText>
                                </MudItem>

                            </MudGrid>

                        </MudPaper>
                    </MudItem>

                    <MudItem xs="3" Class="d-flex align-center">
                        <MudPaper Elevation="4" Class="grey lighten-4 pa-9">
                            <MudButton Variant="Variant.Filled" Size="Size.Medium" Class="red darken-2 white-text"> Calculate Payment </MudButton>
                        </MudPaper>
                    </MudItem>

                </MudGrid>

            </MudItem>

            <!--   Third Section   --->
            <MudItem xs="12">
                <MudPaper Elevation="4" Class="grey lighten-4 py-7 px-10 red-text text-darken-2">

                    <MudGrid>
                        <MudSpacer/>
                        <MudItem xs="4" Class="d-flex justify-end">
                            <MudButton Variant="Variant.Filled" Size="Size.Medium" Class="red darken-2 white-text" OnClick="OpenAddLoggedTime"> Add </MudButton>
                        </MudItem>

                        <MudItem xs="12">
                            <MudTable ServerData="@(new Func<TableState, Task<TableData<LoggedTime>>>(ServerPaging))" Hover="true" Loading="@loading" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Error">

                                <HeaderContent>
                                    <MudTh>Date</MudTh>
                                    <MudTh>Regular</MudTh>
                                    <MudTh>Vacation</MudTh>
                                    <MudTh>Sick</MudTh>
                                    <MudTh>Actions</MudTh>
                                </HeaderContent>

                                <RowTemplate>
                                    <MudTd DataLabel="Date">
                                        <b>@((context.DateLogged).ToString("MMMM, dd yyyy"))</b>
                                    </MudTd>
                                    <MudTd DataLabel="Regular">
                                        @(context.LoggedTimeType.Description.Equals("Regular") ? context.Hours : 0)
                                    </MudTd>
                                    <MudTd DataLabel="Vacation">
                                        @(context.LoggedTimeType.Description.Equals("Vacation") ? context.Hours : 0)
                                    </MudTd>
                                    <MudTd DataLabel="Sick">
                                        @(context.LoggedTimeType.Description.Equals("Sick") ? context.Hours : 0)
                                    </MudTd>
                                    <MudTd DataLabel="Actions">0</MudTd>
                                </RowTemplate>

                                <PagerContent>
                                    <MudTablePager />
                                </PagerContent>

                            </MudTable>
                        </MudItem>

                    </MudGrid>
                    
                </MudPaper>
            </MudItem>

        </MudGrid>

    </MudItem>
</MudGrid>

@code {
    [Parameter]
    public string Id { get; set; }

    [Inject]
    public IDialogService DialogService { get; set; }

    [Inject]
    public ILoggedTimeService LoggedTimeService { get; set; }

    private DateRange dateRange { get; set; }
    private bool loading = true;

    protected override void OnInitialized()
    {
        DateTime date = DateTime.Today;
        dateRange = new DateRange(new DateTime(date.Year, date.Month, 1), date);
    }

    // skip = current page times the size of it in order to get how many of them we want to skip
    // once skip and take are assigned, it queries with the data provided
    private async Task<TableData<LoggedTime>> ServerPaging(TableState tableState)
    {
        int skip = tableState.Page * tableState.PageSize;
        int take = tableState.PageSize;

        string startDate;
        string endDate;

        if (dateRange.Start != null)
        {
            startDate = ((DateTime)dateRange.Start).ToString("yyyy-MM-dd");
        } else
        {
            startDate = (new DateTime(DateTime.Today.Year, DateTime.Today.Month, 1)).ToString("yyyy-MM-dd");
        }

        if (dateRange.End != null)
        {
            endDate = ((DateTime)dateRange.End).ToString("yyyy-MM-dd");
        }
        else
        {
            endDate = DateTime.Today.ToString("yyyy-MM-dd");
        }


        LoggedTimeDataResult result = await LoggedTimeService.GetLoggedTimesByEmployee(100006, startDate, endDate ,skip, take);
        loading = false;

        int totalItems = result.Count;

        return new TableData<LoggedTime>() { TotalItems = totalItems, Items = result.LoggedTimes.ToList() };
    }

    private void OpenAddLoggedTime()
    {
        DialogService.Show <AddTimeManagement>("Add Loggeed Time");
    }
}
